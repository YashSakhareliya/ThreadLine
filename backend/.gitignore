# .gitignore for Node.js and Express.js projects

# General
# #######

# Logs
# Ignore log files, which can grow large and are specific to each run.
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
# Ignore files that store runtime data, like process IDs.
pids
*.pid
*.seed
*.pid.lock

# Dependency directories
# These are installed by package managers and should not be versioned.
# The package.json and lock files are enough to replicate the environment.
node_modules/
jspm_packages/
bower_components/

# Environment variables
# Never commit your environment variables file. It often contains sensitive
# API keys, database credentials, and other secrets.
# A .env.example file should be committed instead to show what variables are needed.
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# Production/Build directories
# These directories contain compiled, bundled, or transpiled code for production.
# They are generated from your source code and should not be in version control.
dist/
build/
.next/
.nuxt/
out/
public/

# Coverage directory
# Generated by code coverage tools (like Istanbul/nyc) when running tests.
coverage/
.nyc_output/

# IDE / Editor specific files
# ###########################

# VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# JetBrains (WebStorm, IntelliJ, etc.)
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Operating System files
# ######################

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Optional
# ########

# Optional typescript build info file
*.tsbuildinfo

# Optional ESLint cache
.eslintcache

# Optional Prettier cache
.prettiercache
